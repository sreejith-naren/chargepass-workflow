name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]  

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Verify dependencies
      run: go mod verify

    - name: Test
      run: go test -v ./...  

    - name: coverage percent write
      run: |
            sudo go test ./... -coverprofile coverage.out -covermode count
            sudo go tool cover -func coverage.out  

    - name: Quality Check - Test coverage shall be above threshold
      env:
          TESTCOVERAGE_THRESHOLD: 4
      run: |
            echo "Quality Gate: checking test coverage is above threshold ..."
            echo "Threshold             : $TESTCOVERAGE_THRESHOLD %"
            totalCoverage=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
            echo "Current test coverage : $totalCoverage %"
            if (( $(echo "$totalCoverage $TESTCOVERAGE_THRESHOLD" | awk '{print ($1 > $2)}') )); then
                echo "OK"
            else
                echo "Current test coverage is below threshold. Please add more unit tests or adjust threshold to a lower value."
                echo "Failed"
                exit 1
            fi  

    - name: Install golint
      run:  go install golang.org/x/lint/golint@latest

    - name: Run golint
      run: |
            default=0
            warnings=`golint ./... | wc -l`
            echo "Warnings : $warnings"
            if (( $(echo "$warnings $default" | awk '{print ($1 > $2)}') )); then
                echo "formatting error..."
                exit 1
            else
              echo "OK"  
            fi

    - name: Build
      run: go build -v ./...      

  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'
    steps:
     # Step 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
     # Step 2
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name Git_Application \
            --deployment-group-name development_gropup \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}    